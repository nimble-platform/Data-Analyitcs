FROM gettyimages/spark:2.1.1-hadoop-2.7
MAINTAINER Christoph Schranz <christoph.schranz@salzburgresearch.at>


# Install Anaconda SciPy Stack using a routine from 
# https://github.com/ContinuumIO/docker-images/tree/master/anaconda3
RUN apt-get update --fix-missing && apt-get install -y wget bzip2 ca-certificates \
    libglib2.0-0 libxext6 libsm6 libxrender1 \ 
    git mercurial subversion 

ENV CONTREPO https://repo.continuum.io/archive/
ENV ANACONDAURL $(wget -q -O - $CONTREPO index.html | grep "Anaconda3-" | grep "Linux" | grep "86_64" | head -n 1 | cut -d \" -f 2)

RUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh
RUN wget --quiet https://repo.continuum.io/archive/Anaconda3-5.0.1-Linux-x86_64.sh -O ~/anaconda.sh
RUN /bin/bash ~/anaconda.sh -b -p /opt/conda
RUN rm ~/anaconda.sh

RUN apt-get install -y curl grep sed dpkg && \ 
    TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o "/v.*\"" | sed 's:^..\(.*\).$:\1:'` && \ 
    curl -L "https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb" > tini.deb && \ 
    dpkg -i tini.deb && \ 
    rm tini.deb && \ 
    apt-get clean 

ENV PATH /opt/conda/bin:$PATH 
ENTRYPOINT [ "/usr/bin/tini", "--" ] 



# Zeppelin
ENV ZEPPELIN_PORT 8080
ENV ZEPPELIN_HOME /usr/zeppelin
ENV ZEPPELIN_CONF_DIR $ZEPPELIN_HOME/conf
ENV ZEPPELIN_NOTEBOOK_DIR $ZEPPELIN_HOME/notebook
ENV ZEPPELIN_COMMIT v0.7.2
RUN echo '{ "allow_root": true }' > /root/.bowerrc
RUN set -ex \
 && buildDeps=' \
    git \
    bzip2 \
    npm \
 ' \
 && apt-get update && apt-get install -y --no-install-recommends $buildDeps \
 && curl -sL http://archive.apache.org/dist/maven/maven-3/3.5.0/binaries/apache-maven-3.5.0-bin.tar.gz \
   | gunzip \
   | tar x -C /tmp/ \
 && git clone https://github.com/apache/zeppelin.git /usr/src/zeppelin \
 && cd /usr/src/zeppelin \
 && git checkout -q $ZEPPELIN_COMMIT \
 && dev/change_scala_version.sh "2.11" \
 && MAVEN_OPTS="-Xmx512m" /tmp/apache-maven-3.5.0/bin/mvn --batch-mode package -DskipTests -Pscala-2.11 -Pbuild-distr \
  -pl 'zeppelin-interpreter,zeppelin-zengine,zeppelin-display,spark-dependencies,spark,markdown,angular,shell,hbase,postgresql,jdbc,python,elasticsearch,zeppelin-web,zeppelin-server,zeppelin-distribution' \
 && tar xvf /usr/src/zeppelin/zeppelin-distribution/target/zeppelin*.tar.gz -C /usr/ \
 && mv /usr/zeppelin* $ZEPPELIN_HOME \
 && mkdir -p $ZEPPELIN_HOME/logs \
 && mkdir -p $ZEPPELIN_HOME/run \
 && apt-get purge -y --auto-remove $buildDeps \
 && rm -rf /var/lib/apt/lists/* \
 && rm -rf /usr/src/zeppelin \
 && rm -rf /root/.m2 \
 && rm -rf /root/.npm \
 && rm -rf /tmp/*


ENV PYTHONPATH /opt/conda/bin/python

COPY notebook/ /usr/zeppelin/notebook/
RUN mkdir -p $ZEPPELIN_HOME/workspace
COPY workspace/ /usr/zeppelin/workspace/

EXPOSE 8080 7077

ADD about.json $ZEPPELIN_NOTEBOOK_DIR/2BTRWA9EV/note.json
WORKDIR $ZEPPELIN_HOME/workspace



# Install some dependencies. 
# Install Tini 
RUN curl -L https://github.com/krallin/tini/releases/download/v0.6.0/tini > tini && \
    echo "d5ed732199c36a1189320e6c4859f0169e950692f451c03e7854243b95f4234b *tini" | sha256sum -c - && \
    mv tini /usr/local/bin/tini && \
    chmod +x /usr/local/bin/tini

RUN pip --no-cache-dir install ipykernel && \ 
\  
python -m ipykernel.kernelspec && \ 
rm -rf /root/.cache 

# Move notebook contents into place. 
ADD . /usr/src/jupyter-notebook 

# Install dependencies and run tests. 
RUN BUILD_DEPS="nodejs-legacy npm" && \ 
apt-get update -qq && \ 
DEBIAN_FRONTEND=noninteractive apt-get install -yq $BUILD_DEPS && \ 
\ 
pip install --no-cache-dir widgetsnbextension && \ 
npm cache clean && \ 
apt-get clean && \ 
rm -rf /root/.npm && \ 
rm -rf /root/.cache && \ 
rm -rf /root/.config && \ 
rm -rf /root/.local && \ 
rm -rf /root/tmp && \ 
rm -rf /var/lib/apt/lists/* && \ 
apt-get purge -y --auto-remove \ 
-o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $BUILD_DEPS 

# Run tests. 
RUN pip install --no-cache-dir notebook[test] 

#RUN pip install nosetests -v notebook 

# Add a notebook profile. 
RUN mkdir -p -m 700 /root/.jupyter/ && \ 
echo "c.NotebookApp.ip = '*'" >> /root/.jupyter/jupyter_notebook_config.py 

VOLUME /notebooks 
WORKDIR /notebooks 

EXPOSE 8888 

ENTRYPOINT ["tini", "--"] 

CMD ["jupyter", "notebook", "--no-browser", "--allow-root"] 



# Absolute path is needed
CMD ["/usr/zeppelin/bin/zeppelin.sh"]


