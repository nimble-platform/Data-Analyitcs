version: '3.3'


services:
# Kafka
  kafka:
    build: 
      context: Kafka-Logstash-Adapter/kafka-adapter/
      args:
        LIBRDKAFKA_VERSION: $LIBRDKAFKA_VERSION
        CONFLUENT_KAFKA_VERSION: $CONFLUENT_KAFKA_VERSION
    ports:
      - "3030:3030"
    environment:
      # seperate kafka entries with ","
      - KAFKA_TOPICS=SensorData
      - BOOTSTRAP_SERVERS=il061,il062
      - KAFKA_GROUP_ID=db-adapter
      - enable_kafka_adapter=true
    networks:
      - elk
    depends_on:
      - redis
    entrypoint:
      - python
      - /home/code/kafka-adapter.py
    restart: always


# Redis Webservice
  redis:
    build: Kafka-Logstash-Adapter/redis/
    sysctls:
      - net.core.somaxconn=65535
    networks:
      - elk
    restart: always


# Elasticsearch
  elasticsearch:
    build: 
      context: ELK-Stack/elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./ELK-Stack/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ./Data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    healthcheck:
      test: "exit 0"
      interval: 1m00s
      timeout: 10s
      retries: 3
    networks:
      - elk
    restart: always

# Logstash
  logstash:
    build: 
      context: ELK-Stack/logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./ELK-Stack/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./ELK-Stack/logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5000:5000"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch
    restart: always

# Kibana
  kibana:
    build: 
      context: ELK-Stack/kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./ELK-Stack/kibana/config/:/usr/share/kibana/config:ro
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - elk
    restart: always


# Zeppelin
  zeppelin:
    build: Zeppelin-Spark
    volumes:
      - ./Zeppelin-Spark/workspace:/usr/zeppelin/workspace
      - ./Zeppelin-Spark/notebook:/usr/zeppelin/notebook
    ports:
      - "8080:8080"
    networks:
      - elk
    restart: always

networks:
  elk:
    driver: bridge



